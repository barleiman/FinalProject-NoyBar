@using TryAgain.Models
@model TryAgain.Models.Post

@{
    ViewBag.Title = "Blog";
}

<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
<link rel="stylesheet" href="https://code.getmdl.io/1.3.0/material.indigo-pink.min.css">
<script defer src="https://code.getmdl.io/1.3.0/material.min.js"></script>



<section>
    <article class="blogPost">
        <header>
            <h3>@Html.DisplayFor(model => model.Title)</h3>
            <p>
                <b> Posted on: </b> <time datetime=@Html.DisplayFor(model => model.PostDate)>@Html.DisplayFor(model => model.PostDate)</time>
                <b> by: </b> @Html.DisplayFor(model => model.postUser.UserName) <b> website: </b> @Html.DisplayFor(model => model.postUser.SiteAddr)
                <br />
                <b> Rating : </b> @Html.DisplayFor(modelitem => modelitem.postRate)
            </p>
        </header>
        <div class="post_body">
            <p>@Html.DisplayFor(model => model.PostText)</p>

        </div>
    </article>

    <!--The comment of the post under the post section-->
    @if (Model.Comments != null && Model.Comments.Count >0)
    {
        <h5>Comments</h5>

        foreach (var comm in Model.Comments)
        {
                    <article class="blogComment">
                        <header>  
                            <a href=@Url.Action("Details", "Blog", new { id = comm.CommentID })>@Html.DisplayFor(modelitem => comm.Title)</a>
                            <p>
                                <b> commented on: </b> <time datetime=@Html.DisplayFor(modelitem => comm.CommentDate)>@Html.DisplayFor(modelitem => comm.CommentDate)</time>
                                <b> by: </b> @Html.DisplayFor(modelitem => comm.commentUser.UserName) <b> on site: </b>  @Html.DisplayFor(modelitem => comm.commentUser.SiteAddr)
                                <br />
                                <b> Rating : </b> @Html.DisplayFor(modelitem => comm.givenRate)
                            </p>
                        </header>
                        <div class="post_body">
                            <p>@Html.DisplayFor(modelitem => comm.Text)</p>
                        </div>
                    </article>

                    if (ViewModelBase.logedonUser!=null && ViewModelBase.logedonUser.Email.Equals(comm.commentUser.Email) && ViewModelBase.logedonUser.UserName.Equals(comm.commentUser.UserName))
                    {
                    <button class="mdl-button mdl-js-button mdc-button--dense mdl-js-ripple-effect " onclick="location.href='@Url.Action("Delete", "Blog", new { id = comm.CommentID })'">Delete comment</button>
                        }
                    }
        }
    }
</section>
@if (ViewModelBase.logedonUser!=null) {
<button class="mdl-button mdl-js-button mdc-button--dense mdl-js-ripple-effect " onclick="location.href='@Url.Action("Create", "Blog", new { id = Model.PostID })'">Add a new comment</button>
}
<button class="mdl-button mdl-js-button mdc-button--dense mdl-js-ripple-effect " onclick="location.href='@Url.Action("Index", "Managment", "Go to posts list")'">Go to posts list</button>
