﻿@using TryAgain.Models
@model IEnumerable<TryAgain.Models.User>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
<link rel="stylesheet" href="https://code.getmdl.io/1.3.0/material.indigo-pink.min.css">
<script defer src="https://code.getmdl.io/1.3.0/material.min.js"></script>

@if (!Model.Count().Equals(0))
{
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BirthDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>

        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegistrationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>


        </tr>
        <tr>
            <td>
                <button class="mdl-button mdl-js-button mdc-button--dense mdl-js-ripple-effect " onclick="location.href='@Url.Action("Details", "FansClub", new { email = item.Email })'">Display user details</button>
                @if ((ViewModelBase.logedonUser != null && ViewModelBase.logedonUser.Email.Equals(item.Email) && ViewModelBase.logedonUser.UserName.Equals(item.UserName)) || ViewModelBase.logedonUser.FanAuthority.Equals(TryAgain.Models.User.Authority.Admin))
                {
                    <button class="mdl-button mdl-js-button mdc-button--dense mdl-js-ripple-effect " onclick="location.href='@Url.Action("Edit", "FansClub", new { email = item.Email })'">Edit user details</button>
                    <button class="mdl-button mdl-js-button mdc-button--dense mdl-js-ripple-effect " onclick="location.href='@Url.Action("Delete", "FansClub", new { email = item.Email })'">Delete user </button>
                }
            </td>
        </tr>
    }

</table>
}
